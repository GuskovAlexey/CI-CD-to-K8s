#!/usr/bin/env groovy
pipeline {
  agent any
    
  tools {
    dockerTool 'docker'
  }
  environment{
    APP_PATH = "app" 
    DOCKER_REGISTRY = "alexeyguskov/react-app-test"
    DOCKERHUB_CREDENTIALS = credentials('dockerhub')
    KUBE_CONFIG = credentials('kubeconfig2')
  }  
  stages {
        
    stage('Prepare') {
        steps {
          script {
            IMAGE_NAME_LATEST = "${DOCKER_REGISTRY}:latest"
            IMAGE_NAME_BUILD_NUMBER = "${DOCKER_REGISTRY}:${GIT_COMMIT}"
          }
        }
    }
     
    stage('Build') {
      steps {
        dir(APP_PATH){
            sh "sudo usermod -a -G docker jenkins"
            sh "sudo chmod 777 /var/run/docker.sock"
            sh "docker build -t ${IMAGE_NAME_LATEST} -f Dockerfile ."
            sh "docker build -t ${IMAGE_NAME_BUILD_NUMBER} -f Dockerfile ."
        }
      }
    }
    stage('Login') {
      steps {
        sh "echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin"
      }
    }   
    stage('Push') {
        steps {
            dir(APP_PATH){
                sh "docker push ${IMAGE_NAME_LATEST}"
                sh "docker push ${IMAGE_NAME_BUILD_NUMBER}"
            }
        } 
    }
    stage('copy cubeconfig') {
      steps {
        sh "sudo mkdir -p ${HOME}/.kube"
        sh "sudo chown -R $USER ${HOME}/.kube" 
        sh "sudo echo $KUBE_CONFIG > ${HOME}/.kube/config"
      }
    }   
    stage('Use context') {
      steps {
        withCredentials([file(credentialsId: 'kubeconfig2', variable: '')]) {
          sh "kubectl --insecure-skip-tls-verify get nodes"
        }
      }  
    }
  }
}